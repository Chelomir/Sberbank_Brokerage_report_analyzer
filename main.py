# Регулярные выражения в Питоне
# https://habr.com/ru/post/349860/
import re

# Путь к файлу с брокерским отчётом
REPORT_PATH = r"C:\Users\User\Desktop\brokercode_030719_030719_D.html"
file = open(REPORT_PATH,'r',encoding="utf-8")

# Оценка активов
my_portfel = {}
my_portfel['ОБЛИГАЦИИ'] = 0
my_portfel['ЗОЛОТО'] = 0
my_portfel['АКЦИИ'] = 0
reading_a = False
# Портфель Ценных Бумаг
pcb = []
reading_pcb = False
# Справочник Ценных Бумаг
scb = []
reading_scb = False

# структура соответствия кодов типов активов
ACTIVE_TYPES = {}
ACTIVE_TYPES['Облигация федерального займа'] = 'ОБЛИГАЦИИ'
ACTIVE_TYPES['Инвестиционный пай иностранного эмитента'] = 'ЗОЛОТО' # ETF у меня только на золото)
ACTIVE_TYPES['Акция обыкновенная'] = 'АКЦИИ'
ACTIVE_TYPES['Акция иностранного эмитента'] = 'АКЦИИ'
ACTIVE_TYPES['Облигация'] = 'ОБЛИГАЦИИ'
ACTIVE_TYPES['ГДР'] = 'АКЦИИ'
ACTIVE_TYPES['Акция привилегированная'] = 'АКЦИИ'

try:
    for line in file:
        # Определяем, что подошли к концу отчёта
        if line.find("Подпись") != -1:
            end_of_report = True

        if line.find("Оценка активов") != -1:
            reading_a = True
        if line.find("Портфель Ценных Бумаг") != -1:
            reading_pcb = True
        if line.find("Справочник Ценных Бумаг") != -1:
            reading_scb = True

        # читаем Оценка активов для определение объёма денежных и стоимости портфеля (для фондового рынка, т.к. срочным не занимаюсь)
        if reading_a:
            # определяем конец таблицы
            if line.find(r"/table") != -1:
                reading_a = False
            # из строчки Фондовый рынок берём данные        
            if line.find(r'Фондовый рынок') != -1:
                temp_arr = re.split(r"</td>",line)
                my_portfel['Оценка портфеля ЦБ, руб'] = float(re.split(r">",temp_arr[1])[1].replace(' ',''))
                my_portfel['Денежные средства, руб.'] = float(re.split(r">",temp_arr[2])[1].replace(' ',''))
                my_portfel['Оценка, руб'] = float(re.split(r">",temp_arr[3])[1].replace(' ',''))
                
        # читаем Портфель Ценных Бумаг для создания справочника имеющихся ЦБ. 
        if reading_pcb:
            # определяем конец таблицы
            if line.find(r"/table") != -1:
                reading_pcb = False
            # каждую строчку таблицы преобразуем в объект my_cb и добавляем к массиву pcb
            if line.find(r'4px') != -1:
                # ценная бумага из строчки
                my_cb = {}
                # TODO: Когда-нибудь попробовать создать регулярное выражение, которое сразу будет выдавать массив значений (без необходимости двойного split'а)
                temp_arr = re.split(r"</td>",line)
                my_cb['Наименование'] = re.split(r">",temp_arr[0])[1]
                my_cb['ISIN ценной бумаги'] = re.split(r">",temp_arr[1])[1]
                # my_cb['Валюта рыночной цены'] = re.split(r">",temp_arr[2])[1]
                # my_cb['Начало периода: Количество, шт'] = re.split(r">",temp_arr[3])[1]
                # my_cb['Начало периода: Номинал'] = re.split(r">",temp_arr[4])[1]
                # my_cb['Начало периода: Рыночная цена'] = re.split(r">",temp_arr[5])[1]
                # my_cb['Начало периода: Рыночная стоимость, без НКД'] = re.split(r">",temp_arr[6])[1]
                # my_cb['Начало периода: НКД'] = re.split(r">",temp_arr[7])[1]
                # my_cb['Конец периода: Количество, шт'] = re.split(r">",temp_arr[8])[1]
                # my_cb['Конец периода: Номинал'] = re.split(r">",temp_arr[9])[1]
                # my_cb['Конец периода: Рыночная цена'] = re.split(r">",temp_arr[10])[1]
                my_cb['Конец периода: Рыночная стоимость, без НКД'] = float(re.split(r">",temp_arr[11])[1].replace(' ',''))
                # my_cb['Конец периода: НКД'] = re.split(r">",temp_arr[12])[1]
                # my_cb['Изменение за период: Количество, шт'] = re.split(r">",temp_arr[13])[1]
                # my_cb['Изменение за период: Рыночная стоимость'] = re.split(r">",temp_arr[14])[1]
                # my_cb['Плановые показатели: Плановые зачисления по сделкам, шт'] = re.split(r">",temp_arr[15])[1]
                # my_cb['Плановые показатели: Плановые списания по сделкам, шт'] = re.split(r">",temp_arr[16])[1]
                # my_cb['Плановые показатели: Плановый исходящий остаток, шт'] = re.split(r">",temp_arr[17])[1]
                pcb.append(my_cb)

        # читаем Справочник Ценных Бумаг для определения типа актива. В дальнейшем, на его основе, проставим в справочнике имеющихся ЦБ проставим признак типа актива
        if reading_scb:
            # определяем конец таблицы
            if line.find(r"/table") != -1:
                reading_scb = False
            # каждую строчку таблицы преобразуем в объект cb и добавляем к массиву scb
            if line.find(r'4px') != -1:
                # ценная бумага из строчки
                cb = {}
                # TODO: Когда-нибудь попробовать создать регулярное выражение, которое сразу будет выдавать массив значений (без необходимости двойного split'а)
                temp_arr = re.split(r"</td>",line)
                # cb['Наименование'] = re.split(r">",temp_arr[0])[1]
                # cb['Код'] = re.split(r">",temp_arr[1])[1]
                cb['ISIN ценной бумаги'] = re.split(r">",temp_arr[2])[1]
                # cb['Эмитент'] = re.split(r">",temp_arr[3])[1]
                cb['Вид, Категория, Тип, иная информация'] = re.split(r">",temp_arr[4])[1]
                # cb['Выпуск, Транш, Серия'] = re.split(r">",temp_arr[5])[1]
                scb.append(cb)
except UnicodeDecodeError:
    if end_of_report == False:
        print("!!!Ошибка чтения (может негативно влиять на результат)")
file.close()

# здесь мы имеем заполненных массива
# - pcb - содержит объекты-ценные бумаги которые есть в нашем портфеле, со стоимостью и количеством
# - scb - содержит объекты-ценные бумаги с описанием их типа (Облигация, акция и пр.)
# Скрестить эти два массива мы можем по атрибуту *ISIN ценной бумаги*

for cb in pcb:
    for b in scb:
        if cb['ISIN ценной бумаги'] == b['ISIN ценной бумаги']:
            cb['Тип'] = ACTIVE_TYPES[b['Вид, Категория, Тип, иная информация']]
            my_portfel[cb['Тип']] = my_portfel[cb['Тип']] + cb['Конец периода: Рыночная стоимость, без НКД']

additional_money = float(input("Введите сумму, которую собираемся доложить на счёт, рублей: "))
my_portfel['Денежные средства, руб.'] = my_portfel['Денежные средства, руб.'] + additional_money
my_portfel['Оценка, руб'] = my_portfel['Оценка, руб'] + additional_money

print("Стоимость ценных бумаг: "+ str(my_portfel['Оценка портфеля ЦБ, руб']) + " рублей")
print("Денежные средства: "+ str(my_portfel['Денежные средства, руб.']) + " рублей")
print("Полная стоимость портфеля: "+ str(my_portfel['Оценка, руб']) + " рублей")
print("------------------------------")
print("Облигации, %: " + str(round(my_portfel['ОБЛИГАЦИИ']*100/my_portfel['Оценка, руб'],2)))
print("Акции, %: " + str(round(my_portfel['АКЦИИ']*100/my_portfel['Оценка, руб'],2)))
print("Золото, %: " + str(round(my_portfel['ЗОЛОТО']*100/my_portfel['Оценка, руб'],2)))
print("Денежные средства, %: " + str(round(my_portfel['Денежные средства, руб.']*100/my_portfel['Оценка, руб'],2)))